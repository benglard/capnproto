// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: json.capnp

#include "json.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<215> b_a3fa7845f919dd83 = {
  {   0,   0,   0,   0,   5,   0,   7,   0,
    131, 221,  25, 249,  69, 120, 250, 163,
     24,   0,   0,   0,   1,   0,   2,   0,
     52,  94,  58, 164, 151, 146, 249, 142,
      1,   0,   7,   0,   0,   0,   7,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 242,   0,   0,   0,
     37,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0, 199,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
     86,  97, 108, 117, 101,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    223, 157, 214,  53, 231,  38,  16, 227,
      9,   0,   0,   0,  50,   0,   0,   0,
     72,  61, 201, 161, 236, 246, 217, 160,
      5,   0,   0,   0,  42,   0,   0,   0,
     70, 105, 101, 108, 100,   0,   0,   0,
     67,  97, 108, 108,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   5,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0, 254, 255,  16,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0, 253, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   0,   0,   0,   3,   0,   1,   0,
    232,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0, 250, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    220,   0,   0,   0,   3,   0,   1,   0,
    248,   0,   0,   0,   2,   0,   1,   0,
      1,   1,   0,   0, 186,   0,   0,   0,
      6,   0, 249, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    253,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    248,   0,   0,   0,   3,   0,   1,   0,
      4,   1,   0,   0,   2,   0,   1,   0,
     13,   1,   0,   0, 138,  16,   0,   0,
    110, 117, 108, 108,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 111, 108, 101,  97, 110,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 109,  98, 101, 114,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 105, 110, 103,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 114,  97, 121,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    131, 221,  25, 249,  69, 120, 250, 163,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111,  98, 106, 101,  99, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    223, 157, 214,  53, 231,  38,  16, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 116,  97, 110, 100,  97, 114, 100,
     32,  74,  83,  79,  78,  32, 118,  97,
    108, 117, 101, 115,  46,  10,   0,   0,
     99,  97, 108, 108,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     72,  61, 201, 161, 236, 246, 217, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     78, 111, 110,  45, 115, 116,  97, 110,
    100,  97, 114, 100,  58,  32,  65,  32,
     34, 102, 117, 110,  99, 116, 105, 111,
    110,  32,  99,  97, 108, 108,  34,  44,
     32,  97, 112, 112, 108, 121, 105, 110,
    103,  32,  97,  32, 110,  97, 109, 101,
    100,  32, 102, 117, 110,  99, 116, 105,
    111, 110,  32,  40, 110,  97, 109, 101,
    100,  32,  98, 121,  32,  97,  32, 115,
    105, 110, 103, 108, 101,  32, 105, 100,
    101, 110, 116, 105, 102, 105, 101, 114,
     41,  10, 116, 111,  32,  97,  32, 112,
     97, 114,  97, 109, 101, 116, 101, 114,
     32, 108, 105, 115, 116,  46,  32,  69,
    120,  97, 109, 112, 108, 101, 115,  58,
     10,  10,  32,  32,  32,  32,  66, 105,
    110,  68,  97, 116,  97,  40,  48,  44,
     32,  34,  90, 109,  57, 118,  67, 103,
     61,  61,  34,  41,  10,  32,  32,  32,
     32,  73,  83,  79,  68,  97, 116, 101,
     40,  34,  50,  48,  49,  53,  45,  48,
     52,  45,  49,  53,  84,  48,  56,  58,
     52,  52,  58,  53,  48,  46,  50,  49,
     56,  90,  34,  41,  10,  10,  77, 111,
    110, 103, 111,  32,  68,  66,  32, 117,
    115, 101, 114, 115,  32, 119, 105, 108,
    108,  32, 114, 101,  99, 111, 103, 110,
    105, 122, 101,  32, 116, 104, 101,  32,
     97,  98, 111, 118, 101,  32,  97, 115,
     32, 101, 120,  97,  99, 116, 108, 121,
     32, 116, 104, 101,  32, 115, 121, 110,
    116,  97, 120,  32,  77, 111, 110, 103,
    111,  32, 117, 115, 101, 115,  32, 116,
    111,  32, 114, 101, 112, 114, 101, 115,
    101, 110, 116,  32,  66,  83,  79,  78,
     10,  34,  98, 105, 110,  97, 114, 121,
     34,  32,  97, 110, 100,  32,  34, 100,
     97, 116, 101,  34,  32, 116, 121, 112,
    101, 115,  32, 105, 110,  32, 116, 101,
    120, 116,  44,  32, 115, 105, 110,  99,
    101,  32,  74,  83,  79,  78,  32, 104,
     97, 115,  32, 110, 111,  32,  97, 110,
     97, 108, 111, 103,  32, 111, 102,  32,
    116, 104, 101, 115, 101,  46,  32,  84,
    104, 105, 115,  32, 105, 115,  32,  98,
     97, 115, 105,  99,  97, 108, 108, 121,
     32, 116, 104, 101,  10, 114, 101,  97,
    115, 111, 110,  32, 116, 104, 105, 115,
     32, 101, 120, 116, 101, 110, 115, 105,
    111, 110,  32, 101, 120, 105, 115, 116,
    115,  46,  32,  87, 101,  32, 100, 111,
     32,  78,  79,  84,  32, 114, 101,  99,
    111, 109, 109, 101, 110, 100,  32, 117,
    115, 105, 110, 103,  32,  96,  99,  97,
    108, 108,  96,  32, 117, 110, 108, 101,
    115, 115,  32, 121, 111, 117,  32, 115,
    112, 101,  99, 105, 102, 105,  99,  97,
    108, 108, 121,  32, 110, 101, 101, 100,
     10, 116, 111,  32,  98, 101,  32,  99,
    111, 109, 112,  97, 116, 105,  98, 108,
    101,  32, 119, 105, 116, 104,  32, 115,
    111, 109, 101,  32, 115, 105, 108, 108,
    121,  32, 102, 111, 114, 109,  97, 116,
     32, 116, 104,  97, 116,  32, 117, 115,
    101, 115,  32, 116, 104, 105, 115,  32,
    115, 121, 110, 116,  97, 120,  46,  10,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a3fa7845f919dd83 = b_a3fa7845f919dd83.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a3fa7845f919dd83[] = {
  &s_a0d9f6eca1c93d48,
  &s_a3fa7845f919dd83,
  &s_e31026e735d69ddf,
};
static const uint16_t m_a3fa7845f919dd83[] = {4, 1, 6, 0, 2, 5, 3};
static const uint16_t i_a3fa7845f919dd83[] = {0, 1, 2, 3, 4, 5, 6};
const ::capnp::_::RawSchema s_a3fa7845f919dd83 = {
  0xa3fa7845f919dd83, b_a3fa7845f919dd83.words, 215, d_a3fa7845f919dd83, m_a3fa7845f919dd83,
  3, 7, i_a3fa7845f919dd83, nullptr, nullptr, { &s_a3fa7845f919dd83, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_e31026e735d69ddf = {
  {   0,   0,   0,   0,   5,   0,   7,   0,
    223, 157, 214,  53, 231,  38,  16, 227,
     30,   0,   0,   0,   1,   0,   0,   0,
    131, 221,  25, 249,  69, 120, 250, 163,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  34,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 135,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
     86,  97, 108, 117, 101,  46,  70, 105,
    101, 108, 100,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    131, 221,  25, 249,  69, 120, 250, 163,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e31026e735d69ddf = b_e31026e735d69ddf.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e31026e735d69ddf[] = {
  &s_a3fa7845f919dd83,
};
static const uint16_t m_e31026e735d69ddf[] = {0, 1};
static const uint16_t i_e31026e735d69ddf[] = {0, 1};
const ::capnp::_::RawSchema s_e31026e735d69ddf = {
  0xe31026e735d69ddf, b_e31026e735d69ddf.words, 52, d_e31026e735d69ddf, m_e31026e735d69ddf,
  1, 2, i_e31026e735d69ddf, nullptr, nullptr, { &s_e31026e735d69ddf, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<57> b_a0d9f6eca1c93d48 = {
  {   0,   0,   0,   0,   5,   0,   7,   0,
     72,  61, 201, 161, 236, 246, 217, 160,
     30,   0,   0,   0,   1,   0,   0,   0,
    131, 221,  25, 249,  69, 120, 250, 163,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  26,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 135,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
     86,  97, 108, 117, 101,  46,  67,  97,
    108, 108,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 117, 110,  99, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114,  97, 109, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    131, 221,  25, 249,  69, 120, 250, 163,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a0d9f6eca1c93d48 = b_a0d9f6eca1c93d48.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a0d9f6eca1c93d48[] = {
  &s_a3fa7845f919dd83,
};
static const uint16_t m_a0d9f6eca1c93d48[] = {0, 1};
static const uint16_t i_a0d9f6eca1c93d48[] = {0, 1};
const ::capnp::_::RawSchema s_a0d9f6eca1c93d48 = {
  0xa0d9f6eca1c93d48, b_a0d9f6eca1c93d48.words, 57, d_a0d9f6eca1c93d48, m_a0d9f6eca1c93d48,
  1, 2, i_a0d9f6eca1c93d48, nullptr, nullptr, { &s_a0d9f6eca1c93d48, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<69> b_fa5b1fd61c2e7c3d = {
  {   0,   0,   0,   0,   5,   0,   7,   0,
     61, 124,  46,  28, 214,  31,  91, 250,
     24,   0,   0,   0,   5,   0, 232,   2,
     52,  94,  58, 164, 151, 146, 249, 142,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 234,   0,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   3,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 186,  11,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
    110,  97, 109, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 101, 102, 105, 110, 101,  32,  97,
    110,  32,  97, 108, 116, 101, 114, 110,
     97, 116, 105, 118, 101,  32, 110,  97,
    109, 101,  32, 116, 111,  32, 117, 115,
    101,  32, 119, 104, 101, 110,  32, 101,
    110,  99, 111, 100, 105, 110, 103,  32,
    116, 104, 101,  32, 103, 105, 118, 101,
    110,  32, 105, 116, 101, 109,  32, 105,
    110,  32,  74,  83,  79,  78,  46,  32,
     84, 104, 105, 115,  32,  99,  97, 110,
     32,  98, 101,  32, 117, 115, 101, 100,
     44,  32, 102, 111, 114,  10, 101, 120,
     97, 109, 112, 108, 101,  44,  32, 116,
    111,  32, 117, 115, 101,  32, 115, 110,
     97, 107, 101,  95,  99,  97, 115, 101,
     32, 110,  97, 109, 101, 115,  32, 119,
    104, 101, 114, 101,  32, 110, 101, 101,
    100, 101, 100,  44,  32, 101, 118, 101,
    110,  32, 116, 104, 111, 117, 103, 104,
     32,  67,  97, 112,  39, 110,  32,  80,
    114, 111, 116, 111,  32, 117, 115, 101,
    115,  32, 115, 116, 114, 105,  99, 116,
    108, 121,  32,  99,  97, 109, 101, 108,
     67,  97, 115, 101,  46,  10,  10,  40,
     72, 111, 119, 101, 118, 101, 114,  44,
     32,  98, 101,  99,  97, 117, 115, 101,
     32,  74,  83,  79,  78,  32, 105, 115,
     32, 100, 101, 114, 105, 118, 101, 100,
     32, 102, 114, 111, 109,  32,  74,  97,
    118,  97,  83,  99, 114, 105, 112, 116,
     44,  32, 121, 111, 117,  32,  42, 115,
    104, 111, 117, 108, 100,  42,  32, 117,
    115, 101,  32,  99,  97, 109, 101, 108,
     67,  97, 115, 101,  32, 110,  97, 109,
    101, 115,  32, 119, 104, 101, 110,  10,
    100, 101, 102, 105, 110, 105, 110, 103,
     32,  74,  83,  79,  78,  45,  98,  97,
    115, 101, 100,  32,  65,  80,  73, 115,
     46,  32,  66, 117, 116,  44,  32, 119,
    104, 101, 110,  32, 115, 117, 112, 112,
    111, 114, 116, 105, 110, 103,  32,  97,
     32, 112, 114, 101,  45, 101, 120, 105,
    115, 116, 105, 110, 103,  32,  65,  80,
     73,  32, 121, 111, 117,  32, 109,  97,
    121,  32, 110, 111, 116,  32, 104,  97,
    118, 101,  32,  97,  32,  99, 104, 111,
    105,  99, 101,  46,  41,  10,   0,   0, }
};
::capnp::word const* const bp_fa5b1fd61c2e7c3d = b_fa5b1fd61c2e7c3d.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_fa5b1fd61c2e7c3d = {
  0xfa5b1fd61c2e7c3d, b_fa5b1fd61c2e7c3d.words, 69, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_fa5b1fd61c2e7c3d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<63> b_82d3e852af0336bf = {
  {   0,   0,   0,   0,   5,   0,   7,   0,
    191,  54,   3, 175,  82, 232, 211, 130,
     24,   0,   0,   0,   5,   0, 224,   0,
     52,  94,  58, 164, 151, 146, 249, 142,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,   2,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   3,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  66,  10,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
    102, 108,  97, 116, 116, 101, 110,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     97, 234, 194, 123,  37,  19, 223, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 112, 101,  99, 105, 102, 105, 101,
    115,  32, 116, 104,  97, 116,  32,  97,
    110,  32,  97, 103, 103, 114, 101, 103,
     97, 116, 101,  32, 102, 105, 101, 108,
    100,  32, 115, 104, 111, 117, 108, 100,
     32,  98, 101,  32, 102, 108,  97, 116,
    116, 101, 110, 101, 100,  32, 105, 110,
    116, 111,  32, 105, 116, 115,  32, 112,
     97, 114, 101, 110, 116,  46,  10,  10,
     73, 110,  32, 111, 114, 100, 101, 114,
     32, 116, 111,  32, 102, 108,  97, 116,
    116, 101, 110,  32,  97,  32, 109, 101,
    109,  98, 101, 114,  32, 111, 102,  32,
     97,  32, 117, 110, 105, 111, 110,  44,
     32, 116, 104, 101,  32, 117, 110, 105,
    111, 110,  32,  40, 111, 114,  44,  32,
    102, 111, 114,  32,  97, 110,  32,  97,
    110, 111, 110, 121, 109, 111, 117, 115,
     32, 117, 110, 105, 111, 110,  44,  32,
    116, 104, 101,  32, 112,  97, 114, 101,
    110, 116,  10, 115, 116, 114, 117,  99,
    116,  32, 116, 121, 112, 101,  41,  32,
    109, 117, 115, 116,  32, 104,  97, 118,
    101,  32, 116, 104, 101,  32,  36, 106,
    115, 111, 110,  68, 105, 115,  99, 114,
    105, 109, 105, 110,  97, 116, 111, 114,
     32,  97, 110, 110, 111, 116,  97, 116,
    105, 111, 110,  46,  10,  10,  84,  79,
     68,  79,  40, 115, 111, 109, 101, 100,
     97, 121,  41,  58,  32,  77,  97, 121,
     98, 101,  32, 115, 117, 112, 112, 111,
    114, 116,  32,  34, 102, 108,  97, 116,
    116, 101, 110, 105, 110, 103,  34,  32,
     97,  32,  76, 105, 115, 116,  40,  86,
     97, 108, 117, 101,  46,  70, 105, 101,
    108, 100,  41,  32,  97, 115,  32,  97,
     32, 119,  97, 121,  32, 116, 111,  32,
    115, 117, 112, 112, 111, 114, 116,  32,
    117, 110, 107, 110, 111, 119, 110,  32,
     74,  83,  79,  78,  10,  32,  32, 102,
    105, 101, 108, 100, 115,  63,  10,   0, }
};
::capnp::word const* const bp_82d3e852af0336bf = b_82d3e852af0336bf.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_82d3e852af0336bf = {
  0x82d3e852af0336bf, b_82d3e852af0336bf.words, 63, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_82d3e852af0336bf, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<45> b_c4df13257bc2ea61 = {
  {   0,   0,   0,   0,   5,   0,   7,   0,
     97, 234, 194, 123,  37,  19, 223, 196,
     24,   0,   0,   0,   1,   0,   0,   0,
     52,  94,  58, 164, 151, 146, 249, 142,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  58,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  71,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
     70, 108,  97, 116, 116, 101, 110,  79,
    112, 116, 105, 111, 110, 115,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
     37,   0,   0,   0, 218,   1,   0,   0,
    112, 114, 101, 102, 105, 120,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     79, 112, 116, 105, 111, 110,  97, 108,
     58,  32,  65, 100, 100, 115,  32, 116,
    104, 101,  32, 103, 105, 118, 101, 110,
     32, 112, 114, 101, 102, 105, 120,  32,
    116, 111,  32, 102, 108,  97, 116, 116,
    101, 110, 101, 100,  32, 102, 105, 101,
    108, 100,  32, 110,  97, 109, 101, 115,
     46,  10,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c4df13257bc2ea61 = b_c4df13257bc2ea61.words;
#if !CAPNP_LITE
static const uint16_t m_c4df13257bc2ea61[] = {0};
static const uint16_t i_c4df13257bc2ea61[] = {0};
const ::capnp::_::RawSchema s_c4df13257bc2ea61 = {
  0xc4df13257bc2ea61, b_c4df13257bc2ea61.words, 45, nullptr, m_c4df13257bc2ea61,
  0, 1, i_c4df13257bc2ea61, nullptr, nullptr, { &s_c4df13257bc2ea61, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<63> b_cfa794e8d19a0162 = {
  {   0,   0,   0,   0,   5,   0,   7,   0,
     98,   1, 154, 209, 232, 148, 167, 207,
     24,   0,   0,   0,   5,   0,  80,   0,
     52,  94,  58, 164, 151, 146, 249, 142,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  50,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 210,   9,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
    100, 105, 115,  99, 114, 105, 109, 105,
    110,  97, 116, 111, 114,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     25,  83,  62,  41,  12, 194, 248, 194,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 112, 101,  99, 105, 102, 105, 101,
    115,  32, 116, 104,  97, 116,  32,  97,
     32, 117, 110, 105, 111, 110,  39, 115,
     32, 118,  97, 114, 105,  97, 110, 116,
     32, 119, 105, 108, 108,  32,  98, 101,
     32, 100, 101,  99, 105, 100, 101, 100,
     32, 110, 111, 116,  32,  98, 121,  32,
    119, 104, 105,  99, 104,  32, 102, 105,
    101, 108, 100, 115,  32,  97, 114, 101,
     32, 112, 114, 101, 115, 101, 110, 116,
     44,  32,  98, 117, 116,  32, 105, 110,
    115, 116, 101,  97, 100,  10,  98, 121,
     32,  97,  32, 115, 112, 101,  99, 105,
     97, 108,  32, 100, 105, 115,  99, 114,
    105, 109, 105, 110,  97, 116, 111, 114,
     32, 102, 105, 101, 108, 100,  46,  32,
     84, 104, 101,  32, 118,  97, 108, 117,
    101,  32, 111, 102,  32, 116, 104, 101,
     32, 100, 105, 115,  99, 114, 105, 109,
    105, 110,  97, 116, 111, 114,  32, 102,
    105, 101, 108, 100,  32, 105, 115,  32,
     97,  32, 115, 116, 114, 105, 110, 103,
     32, 110,  97, 109, 105, 110, 103,  32,
    119, 104, 105,  99, 104,  10, 118,  97,
    114, 105,  97, 110, 116,  32, 105, 115,
     32,  97,  99, 116, 105, 118, 101,  46,
     32,  84, 104, 105, 115,  32,  97, 108,
    108, 111, 119, 115,  32, 116, 104, 101,
     32, 109, 101, 109,  98, 101, 114, 115,
     32, 111, 102,  32, 116, 104, 101,  32,
    117, 110, 105, 111, 110,  32, 116, 111,
     32, 104,  97, 118, 101,  32, 116, 104,
    101,  32,  36, 106, 115, 111, 110,  70,
    108,  97, 116, 116, 101, 110,  32,  97,
    110, 110, 111, 116,  97, 116, 105, 111,
    110,  44,  32, 111, 114,  10, 116, 111,
     32,  97, 108, 108,  32, 104,  97, 118,
    101,  32, 116, 104, 101,  32, 115,  97,
    109, 101,  32, 110,  97, 109, 101,  46,
     10,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cfa794e8d19a0162 = b_cfa794e8d19a0162.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cfa794e8d19a0162 = {
  0xcfa794e8d19a0162, b_cfa794e8d19a0162.words, 63, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cfa794e8d19a0162, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<107> b_c2f8c20c293e5319 = {
  {   0,   0,   0,   0,   5,   0,   7,   0,
     25,  83,  62,  41,  12, 194, 248, 194,
     24,   0,   0,   0,   1,   0,   0,   0,
     52,  94,  58, 164, 151, 146, 249, 142,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 106,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 135,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
     68, 105, 115,  99, 114, 105, 109, 105,
    110,  97, 116, 111, 114,  79, 112, 116,
    105, 111, 110, 115,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
     65,   0,   0,   0, 146,   2,   0,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
    113,   0,   0,   0, 122,  10,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 104, 101,  32, 110,  97, 109, 101,
     32, 111, 102,  32, 116, 104, 101,  32,
    100, 105, 115,  99, 114, 105, 109, 105,
    110,  97, 116, 111, 114,  32, 102, 105,
    101, 108, 100,  46,  32,  68, 101, 102,
     97, 117, 108, 116, 115,  32, 116, 111,
     32, 109,  97, 116,  99, 104, 105, 110,
    103,  32, 116, 104, 101,  32, 110,  97,
    109, 101,  32, 111, 102,  32, 116, 104,
    101,  32, 117, 110, 105, 111, 110,  46,
     10,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,  78,  97, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73, 102,  32, 110, 111, 110,  45, 110,
    117, 108, 108,  44,  32, 115, 112, 101,
     99, 105, 102, 105, 101, 115,  32, 116,
    104,  97, 116,  32, 116, 104, 101,  32,
    117, 110, 105, 111, 110,  39, 115,  32,
    118,  97, 108, 117, 101,  32, 115, 104,
     97, 108, 108,  32, 104,  97, 118, 101,
     32, 116, 104, 101,  32, 103, 105, 118,
    101, 110,  32, 102, 105, 101, 108, 100,
     32, 110,  97, 109, 101,  44,  32, 114,
     97, 116, 104, 101, 114,  32, 116, 104,
     97, 110,  32, 116, 104, 101,  10, 118,
     97, 108, 117, 101,  39, 115,  32, 110,
     97, 109, 101,  46,  32,  73, 110,  32,
    116, 104, 105, 115,  32,  99,  97, 115,
    101,  32, 116, 104, 101,  32, 117, 110,
    105, 111, 110,  39, 115,  32, 118,  97,
    114, 105,  97, 110, 116,  32,  99,  97,
    110,  32, 111, 110, 108, 121,  32,  98,
    101,  32, 100, 101, 116, 101, 114, 109,
    105, 110, 101, 100,  32,  98, 121,  32,
    108, 111, 111, 107, 105, 110, 103,  32,
     97, 116,  32, 116, 104, 101,  10, 100,
    105, 115,  99, 114, 105, 109, 105, 110,
     97, 110, 116,  32, 102, 105, 101, 108,
    100,  44,  32, 110, 111, 116,  32,  98,
    121,  32, 105, 110, 115, 112, 101,  99,
    116, 105, 110, 103,  32, 119, 104, 105,
     99, 104,  32, 118,  97, 108, 117, 101,
     32, 102, 105, 101, 108, 100,  32, 105,
    115,  32, 112, 114, 101, 115, 101, 110,
    116,  46,  10,  10,  73, 116,  32, 105,
    115,  32,  97, 110,  32, 101, 114, 114,
    111, 114,  32, 116, 111,  32, 117, 115,
    101,  32,  96, 118,  97, 108, 117, 101,
     78,  97, 109, 101,  96,  32, 119, 104,
    105, 108, 101,  32,  97, 108, 115, 111,
     32, 100, 101,  99, 108,  97, 114, 105,
    110, 103,  32, 115, 111, 109, 101,  32,
    118,  97, 114, 105,  97, 110, 116, 115,
     32,  97, 115,  32,  36, 102, 108,  97,
    116, 116, 101, 110,  46,  10,   0,   0, }
};
::capnp::word const* const bp_c2f8c20c293e5319 = b_c2f8c20c293e5319.words;
#if !CAPNP_LITE
static const uint16_t m_c2f8c20c293e5319[] = {0, 1};
static const uint16_t i_c2f8c20c293e5319[] = {0, 1};
const ::capnp::_::RawSchema s_c2f8c20c293e5319 = {
  0xc2f8c20c293e5319, b_c2f8c20c293e5319.words, 107, nullptr, m_c2f8c20c293e5319,
  0, 2, i_c2f8c20c293e5319, nullptr, nullptr, { &s_c2f8c20c293e5319, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_d7d879450a253e4b = {
  {   0,   0,   0,   0,   5,   0,   7,   0,
     75,  62,  37,  10,  69, 121, 216, 215,
     24,   0,   0,   0,   5,   0,  32,   0,
     52,  94,  58, 164, 151, 146, 249, 142,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 250,   0,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   3,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 242,   2,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
     98,  97, 115, 101,  54,  52,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80, 108,  97,  99, 101,  32, 111, 110,
     32,  97,  32, 102, 105, 101, 108, 100,
     32, 111, 102,  32, 116, 121, 112, 101,
     32,  96,  68,  97, 116,  97,  96,  32,
    116, 111,  32, 105, 110, 100, 105,  99,
     97, 116, 101,  32, 116, 104,  97, 116,
     32, 105, 116, 115,  32,  74,  83,  79,
     78,  32, 114, 101, 112, 114, 101, 115,
    101, 110, 116,  97, 116, 105, 111, 110,
     32, 105, 115,  32,  97,  32,  66,  97,
    115, 101,  54,  52,  32, 115, 116, 114,
    105, 110, 103,  46,  10,   0,   0,   0, }
};
::capnp::word const* const bp_d7d879450a253e4b = b_d7d879450a253e4b.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_d7d879450a253e4b = {
  0xd7d879450a253e4b, b_d7d879450a253e4b.words, 34, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_d7d879450a253e4b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_f061e22f0ae5c7b5 = {
  {   0,   0,   0,   0,   5,   0,   7,   0,
    181, 199, 229,  10,  47, 226,  97, 240,
     24,   0,   0,   0,   5,   0,  32,   0,
     52,  94,  58, 164, 151, 146, 249, 142,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 226,   0,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   3,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 218,   2,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
    104, 101, 120,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80, 108,  97,  99, 101,  32, 111, 110,
     32,  97,  32, 102, 105, 101, 108, 100,
     32, 111, 102,  32, 116, 121, 112, 101,
     32,  96,  68,  97, 116,  97,  96,  32,
    116, 111,  32, 105, 110, 100, 105,  99,
     97, 116, 101,  32, 116, 104,  97, 116,
     32, 105, 116, 115,  32,  74,  83,  79,
     78,  32, 114, 101, 112, 114, 101, 115,
    101, 110, 116,  97, 116, 105, 111, 110,
     32, 105, 115,  32,  97,  32, 104, 101,
    120,  32, 115, 116, 114, 105, 110, 103,
     46,  10,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f061e22f0ae5c7b5 = b_f061e22f0ae5c7b5.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f061e22f0ae5c7b5 = {
  0xf061e22f0ae5c7b5, b_f061e22f0ae5c7b5.words, 34, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f061e22f0ae5c7b5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_a0a054dea32fd98c = {
  {   0,   0,   0,   0,   5,   0,   7,   0,
    140, 217,  47, 163, 222,  84, 160, 160,
     24,   0,   0,   0,   5,   0,   0,   2,
     52,  94,  58, 164, 151, 146, 249, 142,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  42,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 210,   2,   0,   0,
     99,  97, 112, 110, 112,  47,  99, 111,
    109, 112,  97, 116,  47, 106, 115, 111,
    110,  46,  99,  97, 112, 110, 112,  58,
    110, 111, 116, 105, 102, 105,  99,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73, 110, 100, 105,  99,  97, 116, 101,
    115,  32, 116, 104,  97, 116,  32, 116,
    104, 105, 115,  32, 109, 101, 116, 104,
    111, 100,  32, 105, 115,  32,  97,  32,
     74,  83,  79,  78,  45,  82,  80,  67,
     32,  34, 110, 111, 116, 105, 102, 105,
     99,  97, 116, 105, 111, 110,  34,  44,
     32, 109, 101,  97, 110, 105, 110, 103,
     32, 105, 116,  32, 101, 120, 112, 101,
     99, 116, 115,  32, 110, 111,  32, 114,
    101, 115, 112, 111, 110, 115, 101,  46,
     10,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a0a054dea32fd98c = b_a0a054dea32fd98c.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a0a054dea32fd98c = {
  0xa0a054dea32fd98c, b_a0a054dea32fd98c.words, 35, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a0a054dea32fd98c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace capnp {
namespace json {

// Value
constexpr uint16_t Value::_capnpPrivate::dataWordSize;
constexpr uint16_t Value::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Value::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Value::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Value::Field
constexpr uint16_t Value::Field::_capnpPrivate::dataWordSize;
constexpr uint16_t Value::Field::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Value::Field::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Value::Field::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Value::Call
constexpr uint16_t Value::Call::_capnpPrivate::dataWordSize;
constexpr uint16_t Value::Call::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Value::Call::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Value::Call::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FlattenOptions
constexpr uint16_t FlattenOptions::_capnpPrivate::dataWordSize;
constexpr uint16_t FlattenOptions::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FlattenOptions::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FlattenOptions::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// DiscriminatorOptions
constexpr uint16_t DiscriminatorOptions::_capnpPrivate::dataWordSize;
constexpr uint16_t DiscriminatorOptions::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind DiscriminatorOptions::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DiscriminatorOptions::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

