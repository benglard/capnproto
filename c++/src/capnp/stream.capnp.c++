// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: stream.capnp

#include "stream.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<133> b_995f9a3377c0b16e = {
  {   0,   0,   0,   0,   5,   0,   7,   0,
    110, 177, 192, 119,  51, 154,  95, 153,
     19,   0,   0,   0,   1,   0,   0,   0,
    248, 243, 147,  19, 169, 102, 195, 134,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,   2,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,  28,   0,   0,
     99,  97, 112, 110, 112,  47, 115, 116,
    114, 101,  97, 109,  46,  99,  97, 112,
    110, 112,  58,  83, 116, 114, 101,  97,
    109,  82, 101, 115, 117, 108, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     69, 109, 112, 116, 121,  32, 115, 116,
    114, 117,  99, 116,  32, 116, 104,  97,
    116,  32, 115, 101, 114, 118, 101, 115,
     32,  97, 115,  32, 116, 104, 101,  32,
    114, 101, 116, 117, 114, 110,  32, 116,
    121, 112, 101,  32, 102, 111, 114,  32,
     34, 115, 116, 114, 101,  97, 109, 105,
    110, 103,  34,  32, 109, 101, 116, 104,
    111, 100, 115,  46,  10,  10,  68, 101,
    102, 105, 110, 105, 110, 103,  32,  97,
     32, 109, 101, 116, 104, 111, 100,  32,
    108, 105, 107, 101,  58,  10,  10,  32,
     32,  32,  32, 119, 114, 105, 116, 101,
     32,  64,  48,  32,  40,  98, 121, 116,
    101, 115,  32,  58,  68,  97, 116,  97,
     41,  32,  45,  62,  32, 115, 116, 114,
    101,  97, 109,  59,  10,  10,  73, 115,
     32, 101, 113, 117, 105, 118,  97, 108,
    101, 110, 116,  32, 116, 111,  58,  10,
     10,  32,  32,  32,  32, 119, 114, 105,
    116, 101,  32,  64,  48,  32,  40,  98,
    121, 116, 101, 115,  32,  58,  68,  97,
    116,  97,  41,  32,  45,  62,  32, 105,
    109, 112, 111, 114, 116,  32,  34,  47,
     99,  97, 112, 110, 112,  47, 115, 116,
    114, 101,  97, 109,  46,  99,  97, 112,
    110, 112,  34,  46,  83, 116, 114, 101,
     97, 109,  82, 101, 115, 117, 108, 116,
     59,  10,  10,  72, 111, 119, 101, 118,
    101, 114,  44,  32, 105, 109, 112, 108,
    101, 109, 101, 110, 116,  97, 116, 105,
    111, 110, 115,  32, 116, 104,  97, 116,
     32, 114, 101,  99, 111, 103, 110, 105,
    122, 101,  32, 115, 116, 114, 101,  97,
    109, 105, 110, 103,  32, 119, 105, 108,
    108,  32, 101, 108, 105, 100, 101,  32,
    116, 104, 101,  32, 114, 101, 102, 101,
    114, 101, 110,  99, 101,  32, 116, 111,
     32,  83, 116, 114, 101,  97, 109,  82,
    101, 115, 117, 108, 116,  10,  97, 110,
    100,  32, 105, 110, 115, 116, 101,  97,
    100,  32, 103, 105, 118, 101,  32, 119,
    114, 105, 116, 101,  40,  41,  32,  97,
     32, 100, 105, 102, 102, 101, 114, 101,
    110, 116,  32, 115, 105, 103, 110,  97,
    116, 117, 114, 101,  32,  97, 112, 112,
    114, 111, 112, 114, 105,  97, 116, 101,
     32, 102, 111, 114,  32, 115, 116, 114,
    101,  97, 109, 105, 110, 103,  46,  10,
     10,  83, 116, 114, 101,  97, 109, 105,
    110, 103,  32, 109, 101, 116, 104, 111,
    100, 115,  32, 100, 111,  32, 110, 111,
    116,  32, 114, 101, 116, 117, 114, 110,
     32,  97,  32, 114, 101, 115, 117, 108,
    116,  32,  45,  45,  32, 116, 104,  97,
    116,  32, 105, 115,  44,  32, 116, 104,
    101, 121,  32, 114, 101, 116, 117, 114,
    110,  32,  80, 114, 111, 109, 105, 115,
    101,  60, 118, 111, 105, 100,  62,  46,
     32,  84, 104, 105, 115,  32, 112, 114,
    111, 109, 105, 115, 101,  10, 114, 101,
    115, 111, 108, 118, 101, 115,  32, 110,
    111, 116,  32, 116, 111,  32, 105, 110,
    100, 105,  99,  97, 116, 101,  32, 116,
    104,  97, 116,  32, 116, 104, 101,  32,
     99,  97, 108, 108,  32, 119,  97, 115,
     32,  97,  99, 116, 117,  97, 108, 108,
    121,  32, 100, 101, 108, 105, 118, 101,
    114, 101, 100,  44,  32,  98, 117, 116,
     32, 105, 110, 115, 116, 101,  97, 100,
     32, 116, 111,  32, 112, 114, 111, 118,
    105, 100, 101,  10,  98,  97,  99, 107,
    112, 114, 101, 115, 115, 117, 114, 101,
     46,  32,  87, 104, 101, 110,  32, 116,
    104, 101,  32, 112, 114, 101, 118, 105,
    111, 117, 115,  32,  99,  97, 108, 108,
     39, 115,  32, 112, 114, 111, 109, 105,
    115, 101,  32, 114, 101, 115, 111, 108,
    118, 101, 115,  44,  32, 105, 116,  32,
    105, 115,  32, 116, 105, 109, 101,  32,
    116, 111,  32, 109,  97, 107, 101,  32,
     97, 110, 111, 116, 104, 101, 114,  32,
     99,  97, 108, 108,  46,  32,  79, 110,
     10, 116, 104, 101,  32,  99, 108, 105,
    101, 110, 116,  32, 115, 105, 100, 101,
     44,  32, 116, 104, 101,  32,  82,  80,
     67,  32, 115, 121, 115, 116, 101, 109,
     32, 119, 105, 108, 108,  32, 114, 101,
    115, 111, 108, 118, 101,  32, 112, 114,
    111, 109, 105, 115, 101, 115,  32, 105,
    109, 109, 101, 100, 105,  97, 116, 101,
    108, 121,  32, 117, 110, 116, 105, 108,
     32,  97, 110,  32,  97, 112, 112, 114,
    111, 112, 114, 105,  97, 116, 101,  32,
    110, 117, 109,  98, 101, 114,  10, 111,
    102,  32, 114, 101, 113, 117, 101, 115,
    116, 115,  32,  97, 114, 101,  32, 105,
    110,  45, 102, 108, 105, 103, 104, 116,
     44,  32,  97, 110, 100,  32, 116, 104,
    101, 110,  32, 119, 105, 108, 108,  32,
    100, 101, 108,  97, 121,  32, 112, 114,
    111, 109, 105, 115, 101,  32, 114, 101,
    115, 111, 108, 117, 116, 105, 111, 110,
     32, 116, 111,  32,  97, 112, 112, 108,
    121,  32,  98,  97,  99, 107,  45, 112,
    114, 101, 115, 115, 117, 114, 101,  46,
     10,  79, 110,  32, 116, 104, 101,  32,
    115, 101, 114, 118, 101, 114,  32, 115,
    105, 100, 101,  44,  32, 116, 104, 101,
     32,  82,  80,  67,  32, 115, 121, 115,
    116, 101, 109,  32, 119, 105, 108, 108,
     32, 100, 101, 108, 105, 118, 101, 114,
     32, 111, 110, 101,  32,  99,  97, 108,
    108,  32,  97, 116,  32,  97,  32, 116,
    105, 109, 101,  46,  10,   0,   0,   0, }
};
::capnp::word const* const bp_995f9a3377c0b16e = b_995f9a3377c0b16e.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_995f9a3377c0b16e = {
  0x995f9a3377c0b16e, b_995f9a3377c0b16e.words, 133, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_995f9a3377c0b16e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace capnp {

// StreamResult
constexpr uint16_t StreamResult::_capnpPrivate::dataWordSize;
constexpr uint16_t StreamResult::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind StreamResult::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* StreamResult::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

